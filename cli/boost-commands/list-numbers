#!/usr/bin/env bash

set -e

if [[ $1 == "-h" ]] || [[ $1 == "--help" ]];then
  echo "This command retrieves active phone numbers. You may find it useful for:"
  echo ""
  echo "(1) discovering inactive phone numbers to use for new channels"
  echo "(2) retrieving twilio sids for releasing phone numbers (with boost release_numbers)"
  echo ""
  echo "valid options are:"
  echo ""
  echo "--active : filter for active phone numbers"
  echo "--inactive : filter for inactive phone numbers"
  echo "--count : only show phone number count (omit list itself)"
  echo "-e : path to .env file (in dev, use .env.dev)";
  echo ""
  exit 1
fi

pushd `pwd` > /dev/null # store current dir
cd `dirname "$0"` # cd to script path

while getopts ":e:" opt; do
  case "$opt" in
    e)
      env_file="$OPTARG"
      ;;
  esac
done

# check env vars are properly defined
source ./_check-env
check-env ${env_file}

if [[ $1 == "--active" ]] || [[ $2 == "--active" ]];then
  filter="ACTIVE"
fi

if [[ $1 == "--inactive" ]] || [[ $2 == "--inactive" ]];then
  filter="INACTIVE"
fi

selector='.'

if [[ $1 == "--count" ]] || [[ $2 == "--count" ]];then
  selector='.count'
fi

if [[ -z $filter ]]
then
  query_string=""
else
  query_string="?filter=$filter"
fi

echo "--- fetching numbers..."

curl -s \
     -H "Content-Type: application/json" \
     -H "Token: ${SIGNALBOOST_API_TOKEN}" \
     https://${SIGNALBOOST_HOST_URL}/phoneNumbers${query_string} | jq ${selector}

popd > /dev/null # return to original dir