version: '3'

volumes:

  postgres_data:
  signal_sock:
  signal_data:
  prometheus_data:
  grafana_data:

services:

  db:
    image: postgres:12
    container_name: signalboost_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    restart: unless-stopped

  signald:
    image: signald
    container_name: signalboost_signald
    networks:
      - default
    volumes:
      - ./bin:/signalboost/bin
      - signal_data:/var/lib/signald/data
      - signal_sock:/var/run/signald/
    restart: unless-stopped

  app:
    image: signalboost
    container_name: signalboost_app
    depends_on:
      - db
      - signald
    entrypoint: /signalboost/bin/entrypoint/app
    env_file: .env.dev
    environment:
      PROJECT_ROOT: "$PWD"
      NODE_ENV: "${NODE_ENV:-development}"
      DEFAULT_LANGUAGE: "${DEFAULT_LANGUAGE:-EN}"
    ports:
      - 3000:3000
    networks:
      - default
    volumes:
      - ./.sequelizerc:/signalboost/.sequelizerc
      - ./app:/signalboost/app
      - ./bin:/signalboost/bin
      - ./node_modules:/signalboost/node_modules
      - ./package.json:/signalboost/package.json
      - signal_data:/var/lib/signald/data
      - signal_sock:/var/run/signald/
      - ./yarn.lock:/signalboost/yarn.lock
    restart: unless-stopped

  ngrok:
    container_name: signalboost_ngrok
    ports:
      - 0.0.0.0:4040:4040
    image: wernight/ngrok
    links:
      - app
    env_file: .env.dev
    environment:
      - NGROK_PORT=app:3000
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.18.1
    ports:
      - 9090:9090
    user: root
    networks:
      - default
    volumes:
      - ./conf/prometheus/prometheus_dev.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus_data
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus_data'
      - '--log.level=debug'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:7.0.3
    depends_on:
      - prometheus
    ports:
      - 5000:5000
    networks:
      - default
    volumes:
      - grafana_data:/var/lib/grafana
      - ./conf/grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SERVER_HTTP_PORT=5000
    restart: unless-stopped
