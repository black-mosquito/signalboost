version: '3'

volumes:
  postgres_data:
  signal_sock:
  signal_data:

services:
  db:
    image: postgres
    container_name: signalboost_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
  signald:
    image: signald
    container_name: signald
    networks:
      - default
    volumes:
      - ./bin:/signalboost/bin
      - signal_data:/var/lib/signald/data
      - signal_sock:/var/run/signald/
  api:
    image: signalboost
    container_name: signalboost_api
    depends_on:
      - db
      - signald
    entrypoint: /signalboost/bin/entrypoint/api
    env_file: .env
    environment:
      PROJECT_ROOT: "$PWD"
      NODE_ENV: "${NODE_ENV:-development}"
    ports:
      - 3000:3000
    networks:
      - default
    volumes:
      - ./.sequelizerc:/signalboost/.sequelizerc
      - ./app:/signalboost/app
      - ./bin:/signalboost/bin
      - ./node_modules:/signalboost/node_modules
      - ./package.json:/signalboost/package.json
      - signal_data:/var/lib/signald/data
      - signal_sock:/var/run/signald/
      - ./yarn.lock:/signalboost/yarn.lock
    restart: unless-stopped
  dispatcher:
    image: signalboost
    container_name: signalboost_dispatcher
    depends_on:
      - db
      - signald
      - api
    entrypoint: /signalboost/bin/entrypoint/dispatcher
    env_file: .env
    environment:
      PROJECT_ROOT: "$PWD"
      NODE_ENV: "${NODE_ENV:-development}"
    networks:
      - default
    volumes:
      - ./.sequelizerc:/signalboost/.sequelizerc
      - ./app:/signalboost/app
      - ./bin:/signalboost/bin
      - ./node_modules:/signalboost/node_modules
      - signal_data:/var/lib/signald/data
      - signal_sock:/var/run/signald/
    restart: unless-stopped
  ngrok:
    container_name: ngrok
    ports:
      - 0.0.0.0:4040:4040
    image: wernight/ngrok
    links:
      - api
    env_file: .env
    environment:
      - NGROK_AUTH=$NGROK_AUTH_TOKEN
      - NGROK_SUBDOMAIN=$NGROK_SUBDOMAIN
      - NGROK_PORT=api:3000
    restart: unless-stopped
